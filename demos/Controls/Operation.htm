<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title>地图基本操作功能</title>
    <link href="../../libs/ol/ol.css" rel="stylesheet" type="text/css" />
    <link href="../../css/base.css" rel="stylesheet" type="text/css" />
    <script src="../../libs/ol/ol.js" type="text/javascript"></script>
    <script src="../../libs/ol/ol-debug.js" type="text/javascript"></script>
    <!--  引入第三方插件库 -->
    <script src="../../libs/jquery-1.11.2.min.js" type="text/javascript"></script>
    <link rel="stylesheet" href="../../css/bootstrap.min.css"/>
    <script src="../../js/bootstrap.min.js" type="text/javascript"></script>
    <script src="../../js/zondyClient.js" type="text/javascript"></script>
    <style type="text/css">
        #map{
            width:100%;
            height:100%;
        }
        #menu{
            float:left;
            position:absolute;
            bottom:10px;
            z-index:2000;
        }      
        .tooltip-inner {
          white-space: nowrap;
        }

         /* 鼠标位置控件层样式设置 */
         #mouse-position{
            left:80%;
            position:absolute;
            bottom:25px;         
            z-index:2000;   /*在地图容器中的层，要设置z-index的值让其显示在地图上层*/
        }
        /* 鼠标位置信息自定义样式设置 */
        .custom-mouse-position{
            color:black;
            font-size:16px;
            font-family:"微软雅黑";
        }

       /**
         * 缩放滑块控件ZoomSlider的样式，放置到缩放按钮之间实现导航条功能
         */
         #map .ol-zoom .ol-zoom-out {
            margin-top: 204px;
        }
        #map .ol-zoomslider {
            background-color : transparent;
            top: 2.3em;
        }
        #map .ol-touch .ol-zoom .ol-zoom-out {
            margin-top: 212px;
        }
        #map .ol-touch .ol-zoomslider {
            top: 2.75em;
        }
        #map .ol-zoom-in.ol-has-tooltip:hover [role=tooltip],
        #map .ol-zoom-in.ol-has-tooltip:focus [role=tooltip] {
            top: 3px;
        }
        #map .ol-zoom-out.ol-has-tooltip:hover [role=tooltip],
        #map .ol-zoom-out.ol-has-tooltip:focus [role=tooltip] {
            top: 232px;
        }        
        /**
        * 缩放控件zoomToExtent的样式设置
        */
        #map .ol-zoom-extent { 
            top: 280px;
        }

          /* 图层控件层样式设置 */
          .layerControl{
            position:absolute;
            bottom:5px;
            min-width:200px;
            max-height:200px; 
            right:8px;  
            top:200px;    
            z-index:2001;   /*在地图容器中的层，要设置z-index的值让其显示在地图上层*/
            color:#ffffff;
            background-color:#ffffff38;
            border-width: 10px; /*边缘的宽度*/
            border-radius: 10px;    /*圆角的大小 */ 
            border-color: #000 #000 #000 #000;  /*边框颜色*/
        }
        .layerControl .title
        {
            font-weight:bold;
            font-size:15px;
            margin:10px;
        }
        .layerTree li
        {
             list-style:none; 
             margin:5px 10px; 
        }

        /*=S 自定义鹰眼样式 */
        .ol-custom-overviewmap,.ol-custom-overviewmap.ol-uncollapsible {
            bottom: auto;
            left: auto;
            right: 0; /* 右侧显示 */
            top: 0;  /* 顶部显示 */
        }
        /* 鹰眼控件展开时控件外框的样式 */
        .ol-custom-overviewmap:not(.ol-collapsed)  {
            border: 1px solid black;
        }
         /* 鹰眼控件中地图容器样式 */
        .ol-custom-overviewmap .ol-overviewmap-map {
            border: none;
            width: 300px;
        }
        /* 鹰眼控件中显示当前窗口中主图区域的边框 */
        .ol-custom-overviewmap .ol-overviewmap-box {
            border: 2px solid red;
        }
        /* 鹰眼控件展开时其控件按钮图标的样式 */
        .ol-custom-overviewmap:not(.ol-collapsed) button{
            bottom: auto;
            left: auto;
            right: 1px;
            top: 1px;
        }
        /*=E 自定义鹰眼样式 */
        
    </style>
</head>
<body>
    <div id="map" > 
        <div id="menu">
            <button id="zoom-out">缩小</button><br />
            <button id="zoom-in">放大</button><br />
            <!-- <button id="panto">平移到【武汉】</button> -->
            <button id="restore">复位</button>
            <br />
            <label>输入坐标</label>
            <input id="coordinateX" placeholder="输入横坐标">
            <input id="coordinateY" placeholder="输入纵坐标">
            <button id="getto">定位</button>
            <br />
            <label>&nbsp;</label>      
        </div>
        <div id="mouse-position" > 
        <label>光标所在坐标:</label>
        </div>
        <div id="mouse-position" ></div>
        <div id="layerControl" class="layerControl">
            <div class="title"><label>图层列表</label></div>
            <ul id="layerTree" class="layerTree"></ul>
        </div>
    </div>

    <script type="text/javascript">

         ////实例化鹰眼控件（OverviewMap）,最简单的默认样式鹰眼控件
        // var overviewMapControl = new ol.control.OverviewMap();

        //实例化鹰眼控件（OverviewMap）,自定义样式的鹰眼控件  
        var overviewMapControl = new ol.control.OverviewMap({
            className: 'ol-overviewmap ol-custom-overviewmap', //鹰眼控件样式（see in overviewmap-custom.html to see the custom CSS used）
            //鹰眼中加载同坐标系下不同数据源的图层
            layers: [ 
                new ol.layer.Tile({
                    source: new ol.source.OSM({
                        'url': 'http://{a-c}.tile.opencyclemap.org/cycle/{z}/{x}/{y}.png'
                    })
                })
            ],
            collapseLabel: '\u00BB', //鹰眼控件展开时功能按钮上的标识（网页的JS的字符编码）
            label: '\u00AB', //鹰眼控件折叠时功能按钮上的标识（网页的JS的字符编码）
            collapsed: false //初始为展开显示方式
        });

        var layer = new Array();  //map中的图层数组
        var layerName = new Array();  //图层名称数组
        var layerVisibility = new Array();  //图层可见属性数组

        /**
        * 加载图层列表数据
        * @param {ol.Map} map 地图对象
        * @param {string} id 图层列表容器ID
        */
        function loadLayersControl(map, id) {
            var treeContent = document.getElementById(id); //图层目录容器

            var layers = map.getLayers(); //获取地图中所有图层
            for (var i = 0; i < layers.getLength(); i++) {
                //获取每个图层的名称、是否可见属性
                layer[i] = layers.item(i);
                layerName[i] = layer[i].get('name');
                layerVisibility[i] = layer[i].getVisible();

                //新增li元素，用来承载图层项
                var elementLi = document.createElement('li');
                treeContent.appendChild(elementLi); // 添加子节点
                //创建复选框元素
                var elementInput = document.createElement('input');
                elementInput.type = "checkbox";
                elementInput.name = "layers";
                elementLi.appendChild(elementInput);
                //创建label元素
                var elementLable = document.createElement('label');
                elementLable.className = "layer";
                //设置图层名称
                setInnerText(elementLable, layerName[i]);
                elementLi.appendChild(elementLable);

                //设置图层默认显示状态
                if (layerVisibility[i]) {
                    elementInput.checked = true;
                }
                addChangeEvent(elementInput, layer[i]);  //为checkbox添加变更事件                                         
            }
        }
        /**
        * 为checkbox元素绑定变更事件
        * @param {input} element checkbox元素
        * @param {ol.layer.Layer} layer 图层对象
        */
        function addChangeEvent(element, layer) {
            element.onclick = function () {
                if (element.checked) {
                    layer.setVisible(true); //显示图层
                }
                else {
                    layer.setVisible(false); //不显示图层
                }
            };
        }
        /**
        * 动态设置元素文本内容（兼容）
        */
        function setInnerText(element, text) {
            if (typeof element.textContent == "string") {
                element.textContent = text;
            } else {
                element.innerText = text;
            }
        }

        

        //实例化Map对象加载地图
        var map = new ol.Map({
            target: 'map', //地图容器div的ID
            layers: [
            //加载瓦片图层数据
                new ol.layer.Tile({
                    source: new ol.source.OSM(), 
                    name: '图层1(OSM)'
                }),
                new ol.layer.Tile({
                    source: new ol.source.MapQuest({ layer: 'sat' }),
                    name: '图层2(MapQuest)'
                }),
                // new ol.layer.Vector({
                //     source: new ol.source.Vector({
                //         url: '../data/geojson/gaungxishengline.json',
                //         format: new ol.format.GeoJSON()
                //     }),
                //     name: '图层3(广西行政区边界)'
                // }),
                // new ol.layer.Vector({
                //     source: new ol.source.Vector({
                //         url: '../data/geojson/gaungxisheng.json',
                //         format: new ol.format.GeoJSON(),
                //         style:getStyle("blue", "true", 2)
                //     }),
                //     name: '图层4(广西行政)'
                // }),
                new ol.layer.Vector({
                    source: new ol.source.Vector({
                        url: '../data/kml/2012_Earthquakes_Mag5.kml',
                        format: new ol.format.KML({
                            extractStyles: false
                        })
                    }),
                    name: '图层3(地震)'     
                })
                // new ol.layer.Tile({
                //     source: new ol.source.Tile({
				// //v4表示MapBox的API版本，satellite是地图样式，access_token后面是开发者key
				// url: "https://api.tiles.mapbox.com/v4/mapbox.satellite.json?secure&access_token=pk.eyJ1IjoiaGVyaWEiLCJhIjoiY2tpc3JoZGl5MTB5aDJ0bHJqdG9jZGh5ZiJ9.aczvKJ89RI5MvYgMZFDznQ",
				// //对跨域类型属性的一个声明
                // crossOrigin: "anonymous" 
                //     }), 
                //     name: '图层4(Mapbox)'
                // }),
                // new ol.layer.Image({
                //     source: new ol.source.ImageWMS({
                //        url:  "http://localhost:6163/igs/rest/ogc/doc/GUANGXI/WMSServer",
                        
                //     }),
                //     name: '图层5(Mapgis)'
                // }),
                // new ol.layer.Tile({
                //     source: new ol.source.Tile({
				// url: "http://localhost:6163/igs/rest/mrcs/docs/地图文档/0/layers?f=json"
                //     }), 
                //     name: '图层5(MapGis)'
                // })
            ],
            //地图视图设置
            view: new ol.View({
                center: [12000000, 2500000], //地图初始中心点
                zoom: 5  //地图初始显示级别
            })
            
        });

        zd=new Zondy.Map.document("guangxi","GUANGXI",{
            ip:"127.0.0.1",
            port:"6163",
            isBaseLayer: false,
            name:'图层5'
        })

        map.addLayer(zd);
        // baseUrlDocWMS = "http://localhost:6163/igs/rest/ogc/doc/GUANGXI/WMSServer";
        //     //创建基于地图文档的WMS图层对象
        //     wmsDocLayer = new ol.layer.Image({
        //         title: "WMSDoc",
        //         source: new ol.source.ImageWMS({
        //             //WMS服务地址
        //             url: baseUrlDocWMS,
        //             //图层等参数
        //             params: { 'LAYERS': 'SampleDoc:行政区', 'VERSION': '1.1.1', 'TILED': true },
        //             //服务类型
        //             serverType: 'geoserver',
                    
        //         }),
        //         name:'武汉'
        //     });
        //     map.addLayer(wmsDocLayer);

        function getStyle() {
            var color = $("input[name='linecolor']:checked").val();
            var fillColor = $("#fillcolor").val();
            var opacity = $("#opacity").val();
            if(color===""){
                color = $("#linecolor").val();
            }
            fillColor = fillColor.colorRgb();
            var _fillColor = "RGBA("+fillColor[0]+","+fillColor[1]+","+fillColor[2]+","+opacity+")";
            var dash = $("input[name='linetype']:checked").val();
            var width = parseInt($("input[name='linewidth']").val());
		    var _dash = dash==="true"?3*width:0;
		    var islabel = $("#islabel")[0].checked;
            return function(feature, resolution){
                var name = feature.get("name");
                var lblcolor = '#000000';
                if(!islabel)lblcolor = 'rgba(0,0,0,0)';
                return new ol.style.Style({
                    stroke: new ol.style.Stroke({
                        color: color,
                        lineDash: [_dash, _dash],
                        width: width
                    }),
                    fill: new ol.style.Fill({
                        color: _fillColor,
                        opacity:opacity
                    }),
                    text: new ol.style.Text({
                        text: name,
                        fill: new ol.style.Fill({
                            color:lblcolor
                        })
                    })
                });
			}
        }

        // mapdoc=new Zondy.Map.document("MapGIS IGS VectorMapdocLayer", "地图文档",{
        //         //矢量地图文档地图服务器 ip 
        //         ip: "localhost", 
        //         //矢量地图文档地图服务端口 
        //         port: "6163", 
        //         name:"地图文档",
        //         //是否作为基础显示图层，默认为 true，表示最为基础显示图层 
        //         isBaseLayer: false
        //     });
            
        // map.addLayers([mapdoc]);
        //地图视图的初始参数
        var view = map.getView();
        var zoom = view.getZoom();
        var center = view.getCenter();
        var rotation = view.getRotation();

        //单击缩小按钮功能
        document.getElementById('zoom-out').onclick = function () {
            var view = map.getView(); //获取地图视图
            var zoom = view.getZoom();//获得当前缩放级数
            view.setZoom(zoom - 1); //地图缩小一级
        };
        //单击放大按钮功能
        document.getElementById('zoom-in').onclick = function () {
            var view = map.getView(); //获取地图视图
            var zoom = view.getZoom(); //获得当前缩放级数
            view.setZoom(zoom + 1);//地图放大一级
        };

        // //平移功能（移到到武汉市）
        // document.getElementById('panto').onclick = function () {
        //     var view = map.getView(); //获取地图视图
        //     var wh = ol.proj.fromLonLat([114.31667, 30.51667]);
        //     view.setCenter(wh); //平移地图
        // };
        
        //复位功能（复位到初始状态）
        document.getElementById('restore').onclick = function () {
            view.setCenter(center); //初始中心点
            view.setRotation(rotation); //初始旋转角度
            view.setZoom(zoom); //初始缩放级数
        };

        //定位功能
        document.getElementById('getto').onclick=function(){
             //旋转动画
            var rotate = ol.animation.rotate({
                duration: 2000,  //持续时间
                rotation: -4 * Math.PI  //旋转角度
            });
            map.beforeRender(rotate); 
            var view = map.getView(); 
            var x=document.getElementById("coordinateX").value;
            var y=document.getElementById("coordinateY").value;
            var wh = ol.proj.fromLonLat([x, y]);
            view.setCenter(wh);
        }

        //实例化鼠标位置控件（MousePosition）
        var mousePositionControl = new ol.control.MousePosition({
            coordinateFormat: ol.coordinate.createStringXY(4), //坐标格式
            projection: 'EPSG:4326',//地图投影坐标系（若未设置则输出为默认投影坐标系下的坐标）
            className: 'custom-mouse-position', //坐标信息显示样式，默认是'ol-mouse-position'
            target: document.getElementById('mouse-position'), //显示鼠标位置信息的目标容器
            undefinedHTML: '&nbsp;'//未定义坐标的标记
        });

        //实例化比例尺控件（ScaleLine）
        var scaleLineControl = new ol.control.ScaleLine({
            units: "metric" ,//设置比例尺单位，degrees、imperial、us、nautical、metric（度量单位）
        });

        //实例化ZoomSlider控件并加载到地图容器中
        var zoomslider = new ol.control.ZoomSlider(); 
        map.addControl(zoomslider);
        //实例化zoomToExtent控件并加载到地图容器中
        var zoomToExtent = new ol.control.ZoomToExtent({
            extent: [
            13100000, 4290000,
            13200000, 5210000
            ]
        }); 
        
        var FullScreen=new ol.control.FullScreen;
        map.addControl(zoomToExtent); 
        map.addControl(mousePositionControl);
        map.addControl(scaleLineControl);
        map.addControl(FullScreen);
        map.addControl(overviewMapControl);
         //加载图层列表数据
        loadLayersControl(map, "layerTree");       
       
    </script>
</body>
</html>
